name: Build and Push Docker Image

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

env:
  GHCR_IMAGE: ghcr.io/${{ github.repository }}
  CACHE_REPO: ${{ vars.DOCKERHUB_USERNAME }}/example-cache

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build-and-push:
    name: Build, Tag, Scan and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v4

      - name: Generate Docker metadata (tags)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.GHCR_IMAGE }}
          flavor: latest=false
          tags: |
            type=sha,priority=100,prefix=sha-,format=short
            type=semver,priority=200,pattern={{version}}

      - name: Set up QEMU for multi-arch builds
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry (ghcr.io)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to DockerHub (for registry cache)
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Run Trivy security scan
        uses: aquasecurity/trivy-action@v0.13.0
        with:
          image-ref: .
          format: table
          severity: CRITICAL,HIGH
          exit-code: 1

      - name: Build and push multi-arch Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: |
            type=registry,ref=${{ env.CACHE_REPO }}:cache
          cache-to: |
            type=registry,ref=${{ env.CACHE_REPO }}:cache,mode=max
